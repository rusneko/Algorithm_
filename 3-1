#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#pragma warning(disable:4996) 

int n = 0;  //삽입된 배열 개수
int h[100]; //힙 배열


void upHeap(int i) { //힙 내 위치 i에 저장된 키를 맞는 위치로 상향 이동
	int tmp;
	if (i == 1) {  //위치가 루트면 리턴
		return;
	}
	if (h[i] <= h[i / 2]) { //위치노드가 부모노드보다 같거나 작으면 리턴 (완전 이진트리에서는 부모 노드 위치가 i/2)
		return;
	}
	tmp = h[i];
	h[i] = h[i / 2];
	h[i / 2] = tmp;  //위의 두 경우가 아니면 부모노드와 위치노드의 값을 스왑
	upHeap(i / 2);

}

void downHeap(int i) { //힙 내 위치 i에 저장된 키를 맞는 위치로 하향 이동
	int tmp;
	int bigger;
	if ((n < (i * 2)) && (n < (i * 2 + 1))) { //왼쪽과 오른쪽 자식이 모두 외부노드이면 리턴
		return;
	}
	bigger = i * 2;
	if (n >= i * 2 + 1) {
		if (h[i * 2 + 1] > h[bigger]) {
			bigger = i * 2 + 1;
		}
	}
	if (h[i] >= h[bigger]) {  //위치노드가 자식노드보다 크거나 같으면 리턴
		return;
	}
	tmp = h[i];  //위의 경우가 아니면 위치노드와 자식노드를 스왑
	h[i] = h[bigger];
	h[bigger] = tmp;

	downHeap(bigger); //재귀함수 호출
}


void insertItem(int key) {
	h[++n] = key;  //개수 높이고 삽입
	upHeap(n);  //맞는 위치로 상향 이동
}

int removeMax() {
	int key;
	key = h[1]; //루트 키 보관
	h[1] = h[n--];  //제일 마지막 키 값을 루트에 넣음
	downHeap(1);  //루트에 있는 값을 맞는 위치로 하향 이동
	return key;  //삭제된 키 값 반환
}

void printHeap() {  //힙 레벨 순서로 프린트

	for (int i = 1;i <= n;i++) {
		printf(" %d", h[i]);
	}

	printf("\n");
}


void main(){

	
	char c; //연산 타입 변수
	int k; //키 값

	while (1) {
		scanf("%c", &c);

		if (c == 'i') {
			scanf("%d", &k);
			insertItem(k);
			printf("0\n");
			getchar();
		}
		else if (c == 'p') {
			printHeap();
			getchar();
		}
		else if (c == 'd') {
			printf("%d\n", removeMax());
			getchar();
		}
		else
			break;

		
	}
}
